name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci

jobs:
  lint:
    strategy:
      fail-fast: true

    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Sol Fmt
        run: |
          forge fmt --check
  
  # analyze:
  #   strategy:
  #     matrix:
  #       python-version: [3.8]
  #       slither-version: [0.10.0]

  #   name: Slither
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - name: Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: nightly

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install Slither
  #       run: python3 -m pip install slither-analyzer==${{ matrix.slither-version }}

  #     - name: Static analysis
  #       run: slither .

  check:
    strategy:
      fail-fast: true
      matrix:
        node-version: [16.x]

    name: Forge Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
  
      - name: Enable Node Corepack
        run: corepack enable

      - name: Yarn Install
        run: yarn install

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test

  coverage:
    strategy:
      matrix:
        node-version: [16.x]

    name: Forge Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
  
      - name: Enable Node Corepack
        run: corepack enable

      - name: Yarn Install
        run: yarn install

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge coverage
        run: forge coverage --report lcov

      - name: Report Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./lcov.info        
